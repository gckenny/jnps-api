const express = require("express");
const cors = require("cors");
const { GoogleSpreadsheet } = require("google-spreadsheet");
const { JWT } = require("google-auth-library");

// 引入dotenv以讀取.env文件中的環境變數
require("dotenv").config();

const app = express();

// 設定CORS
app.use(cors());

// 定義路由
app.get("/getMembers", async (req, res) => {
  try {
    // Initialize auth - see https://theoephraim.github.io/node-google-spreadsheet/#/guides/authentication
    const serviceAccountAuth = new JWT({
      // env var values here are copied from service account credentials generated by google
      // see "Authentication" section in docs for more info
      email: process.env.CLIENT_EMAIL,
      key: process.env.PRIVATE_KEY,
      scopes: ["https://www.googleapis.com/auth/spreadsheets"],
    });

    // 創建一個GoogleSpreadsheet實例，並提供您的表格ID
    const doc = new GoogleSpreadsheet(process.env.SHEET_ID, serviceAccountAuth);

    // 加載表格信息
    await doc.loadInfo();

    // 選擇要訪問的工作表，例如名為“選手名單”的工作表
    const sheet = doc.sheetsByTitle["選手名單"];

    // 加載 A-Q 欄的單元格
    await sheet.loadCells("A1:Q" + sheet.rowCount);

    const result = [];
    for (let rowIndex = 0; rowIndex < sheet.rowCount; rowIndex++) {
      const nameCell = sheet.getCell(rowIndex, 1); // B欄的單元格
      if (nameCell.value) {
        const rowData = {};
        for (let colIndex = 0; colIndex <= 16; colIndex++) {
          // A-Q 欄
          const cell = sheet.getCell(rowIndex, colIndex);
          rowData[String.fromCharCode(65 + colIndex)] = cell.value; // 將列索引轉換為字母 (A-Q)
        }
        result.push(rowData);
      }
    }

    // 輸出結果並結束請求
    res.json({ data: result });
  } catch (error) {
    console.error("Error fetching data: ", error);
    res.status(500).json({ error: "Internal Server Error", message: error.message });
  }
});

// 監聽端口
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});
